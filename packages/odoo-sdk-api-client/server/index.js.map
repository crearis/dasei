{"version":3,"file":"index.js","sources":["../src/setup/clientSetup.ts","../src/extensions/sessionHeaderExtension .ts","../src/api/mutation/index.ts","../src/api/query/index.ts","../src/index.server.ts"],"sourcesContent":["import {\n  ApolloClient,\n  ApolloLink,\n  InMemoryCache,\n  createHttpLink,\n} from '@apollo/client';\nimport { MiddlewareConfig } from '../index';\n\nimport fetch from 'cross-fetch';\n\nconst buildClient = (settings: MiddlewareConfig) => {\n  const httpLink = createHttpLink({\n    uri: settings.odooGraphqlUrl,\n    credentials: 'include',\n    fetch,\n    fetchOptions: settings.fetchOptions,\n    headers: settings.headers,\n  });\n\n  const afterwareLink = new ApolloLink((operation, forward) => {\n    return forward(operation).map((response) => {\n      const context = operation.getContext();\n      const authHeader = context.response.headers.get('set-cookie');\n\n      if (response.data) {\n        response.data.cookie = authHeader;\n      }\n\n      return response;\n    });\n  });\n\n  const apolloLink = ApolloLink.from([afterwareLink.concat(httpLink)]);\n\n  return new ApolloClient({\n    link: apolloLink,\n    cache: new InMemoryCache(),\n    ssrMode: true,\n    credentials: 'include',\n    defaultOptions: {\n      query: {\n        errorPolicy: 'all',\n        fetchPolicy: 'no-cache',\n      },\n      mutate: {\n        errorPolicy: 'all',\n      },\n    },\n  });\n};\n\nexport default buildClient;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { ApiClientExtension } from '@vue-storefront/middleware';\nimport type { Request, Response } from 'express';\nimport requestIp from 'request-ip';\n\nconst sessionHeaderExtension: ApiClientExtension = {\n  name: 'sessionHeaderExtension ',\n  hooks: (req: Request, res: Response) => {\n    return {\n      beforeCreate: ({ configuration }) => {\n        const clientIp = requestIp.getClientIp(req);\n\n        return {\n          ...configuration,\n          sessionAuth: req.headers.cookie,\n          requestHost: req.headers.host,\n          realIp: clientIp\n        };\n      },\n      beforeCall: ({ configuration, callName, args }) => args,\n      afterCall: ({ configuration, callName, response }) => {\n        if ((response as any)?.data?.cookie) {\n          res.setHeader('Set-cookie', (response as any)?.data?.cookie);\n        }\n\n        return response;\n      }\n\n    };\n  }\n};\n\nexport default sessionHeaderExtension;\n","import { Endpoints, OdooIntegrationContext, MutationMetadataParams } from '../../types';\nimport consola from 'consola';\n\nexport const mutation: Endpoints['mutation'] = async <ApiParams, ApiResponseType>(context: OdooIntegrationContext, metadata: MutationMetadataParams, params?: ApiParams) => {\n\n  if(!metadata || !metadata.mutationName) {\n    const msg = 'Developer Error: mutationName is required'\n    consola.error(msg);\n    throw msg;\n  }\n\n  if(!context.config.queries || Object.keys(context.config?.queries)?.length == 0) {\n    const msg = 'Developer Error: mutations must be configured (MiddlewareConfig.queries)'\n    consola.error(msg);\n    throw msg;\n  }\n\n  const mutation = context.config.queries[metadata.mutationName];\n\n  if(!mutation) {\n    const msg = `Developer Error: mutation ${metadata.mutationName} is not configured in middleware`\n    consola.error(msg);\n    throw msg;\n  }\n\n\n  const response = await context.client.mutate<ApiResponseType, ApiParams>({\n    variables: params,\n    mutation,\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all'\n  });\n\n  return response;\n};\n\n","import { Endpoints, OdooIntegrationContext, QueryMetadataParams } from '../../types';\nimport consola from 'consola';\n\nexport const query: Endpoints['query'] = async <ApiParams, ApiResponseType>(context: OdooIntegrationContext, metadata: QueryMetadataParams, params?: ApiParams) => {\n\n  if (!metadata || !metadata.queryName) {\n    const msg = 'Developer Error: queryName is required';\n    consola.error(msg);\n    throw msg;\n  }\n\n  if (!context.config.queries || Object.keys(context.config?.queries)?.length == 0) {\n    const msg = 'Developer Error: queries must be configured (MiddlewareConfig.queries)';\n    consola.error(msg);\n    throw msg;\n  }\n\n  const query = context.config.queries[metadata.queryName];\n\n  if (!query) {\n    const msg = `Developer Error: query ${metadata.queryName} is not configured in middleware`;\n    consola.error(msg);\n    throw msg;\n  }\n\n  const response = await context.client.query<ApiResponseType, ApiParams>({\n    variables: params,\n    query,\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all'\n  });\n\n  return response;\n};\n\n","import buildClient from './setup/clientSetup';\nimport { apiClientFactory } from '@vue-storefront/middleware';\nimport { MiddlewareConfig } from './index';\nimport sessionHeaderExtension from './extensions/sessionHeaderExtension ';\nimport * as apiEndpoints from './api';\n\nconst onCreate = (settings: MiddlewareConfig) => {\n  const client = buildClient(settings);\n\n  return {\n    config: settings,\n    client\n  };\n};\n\nconst { createApiClient } = apiClientFactory({\n  onCreate,\n  api: apiEndpoints,\n  extensions: [\n    sessionHeaderExtension\n  ]\n});\n\nexport { createApiClient };\n"],"names":["createHttpLink","fetch","ApolloLink","ApolloClient","InMemoryCache","requestIp","consola","apiClientFactory"],"mappings":"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"}